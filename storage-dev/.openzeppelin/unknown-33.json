{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x848FD4E195dBb156F245E3E5FaB5b36706776Ba5",
    "txHash": "0xddd2f9cd9a77c565eb7e5b0274982c7a4db57afdf690c396a42e0d9f6ecfcb9f"
  },
  "proxies": [
    {
      "address": "0x13cF0a53b6102b518e8b547d5E50b38C1b089E08",
      "txHash": "0x4b125added3ef0db4e758343d5c21bee45c7fc29d52e0ccf9a517740d49789d4",
      "kind": "transparent"
    }
  ],
  "impls": {
    "ff511cc4c1c07055cb8e978519fac2701c9ce5e613cc8eaece6da4afa4435d48": {
      "address": "0xd6681FD2d471c044BDdDc9DF00D1Af195Bd58bfa",
      "txHash": "0x0b12965c014e791b4c082a21d4e686b513d5ad25f35b4a0a1652f27507d26b09",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "contract": "StorageManager",
            "label": "offerRegistry",
            "type": "t_mapping(t_address,t_struct(Offer)1893_storage)",
            "src": "../@rsksmart/rif-marketplace-storage/contracts/StorageManager.sol:52"
          },
          {
            "contract": "StorageManager",
            "label": "isWhitelistedToken",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../@rsksmart/rif-marketplace-storage/contracts/StorageManager.sol:55"
          },
          {
            "contract": "StorageManager",
            "label": "isWhitelistedProvider",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../@rsksmart/rif-marketplace-storage/contracts/StorageManager.sol:58"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(Offer)1893_storage)": {
            "label": "mapping(address => struct StorageManager.Offer)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Offer)1893_storage": {
            "label": "struct StorageManager.Offer",
            "members": [
              {
                "label": "utilizedCapacity",
                "type": "t_uint64"
              },
              {
                "label": "totalCapacity",
                "type": "t_uint64"
              },
              {
                "label": "billingPlansForToken",
                "type": "t_mapping(t_address,t_mapping(t_uint64,t_uint128))"
              },
              {
                "label": "agreementRegistry",
                "type": "t_mapping(t_bytes32,t_struct(Agreement)1904_storage)"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_mapping(t_uint64,t_uint128))": {
            "label": "mapping(address => mapping(uint64 => uint128))"
          },
          "t_mapping(t_uint64,t_uint128)": {
            "label": "mapping(uint64 => uint128)"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_mapping(t_bytes32,t_struct(Agreement)1904_storage)": {
            "label": "mapping(bytes32 => struct StorageManager.Agreement)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Agreement)1904_storage": {
            "label": "struct StorageManager.Agreement",
            "members": [
              {
                "label": "billingPrice",
                "type": "t_uint128"
              },
              {
                "label": "billingPeriod",
                "type": "t_uint64"
              },
              {
                "label": "availableFunds",
                "type": "t_uint256"
              },
              {
                "label": "size",
                "type": "t_uint64"
              },
              {
                "label": "lastPayoutDate",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
