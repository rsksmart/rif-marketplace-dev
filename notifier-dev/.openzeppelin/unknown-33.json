{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x3AFc8E02d35F6c64B24bAAD5B4097dcB49A488aE",
    "txHash": "0xd01d464e4f39e2d2490a2626b88d17d31dcc4d0cfa8b7205d60626532ff0eacb"
  },
  "proxies": [
    {
      "address": "0x73b1C6D725eAfb2B9514e2aF092f9f61Fd005088",
      "txHash": "0x5d69404a2998fef8d765f9172f070a75a138a0066807bbdd0741136f7979942c",
      "kind": "transparent"
    }
  ],
  "impls": {
    "51792e0b10eeb78d9a99ed8af494eed88325cf21500b166c32c1a07c9c650939": {
      "address": "0x757eB378CD038b7100ba612360fdaBd1f4FfDB91",
      "txHash": "0x83a7eb9b66ad8d5fce51be40b7887ffdc9b975c91d0cb03b499f31f2f8d9fc44",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "NotifierManager",
            "label": "isWhitelistedToken",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../@rsksmart/rif-marketplace-notifier/contracts/NotifierManager.sol:22"
          },
          {
            "contract": "NotifierManager",
            "label": "isWhitelistedProvider",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../@rsksmart/rif-marketplace-notifier/contracts/NotifierManager.sol:25"
          },
          {
            "contract": "NotifierManager",
            "label": "providerRegistry",
            "type": "t_mapping(t_address,t_struct(Provider)1879_storage)",
            "src": "../@rsksmart/rif-marketplace-notifier/contracts/NotifierManager.sol:28"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(Provider)1879_storage)": {
            "label": "mapping(address => struct NotifierManager.Provider)"
          },
          "t_struct(Provider)1879_storage": {
            "label": "struct NotifierManager.Provider",
            "members": [
              {
                "label": "url",
                "type": "t_string_storage"
              },
              {
                "label": "subscriptions",
                "type": "t_mapping(t_bytes32,t_struct(Subscription)1888_storage)"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(Subscription)1888_storage)": {
            "label": "mapping(bytes32 => struct NotifierManager.Subscription)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Subscription)1888_storage": {
            "label": "struct NotifierManager.Subscription",
            "members": [
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "consumer",
                "type": "t_address"
              },
              {
                "label": "providerSignature",
                "type": "t_bytes_storage"
              },
              {
                "label": "balance",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
